<?xml version="1.0" encoding="utf-8"?>
<UITemplate>

    <Style src="Documentation/Documentation.style" alias="theme"/>
    <Style src="Documentation/Features/InputEventsDemo.style"/>

    <Contents>
        <Heading1>Drag and Drop</Heading1>
        <Group style="section">
            <Div style="show">

                <Group attr:id="startZone" style="start-zone" drag:drop="DropDrag($event, $element)">
                    <Div if="IsInStartZone" style="dragme" drag:create="StartDrag($event, $element)">
                        Dragme2
                    </Div>
                </Group>
                <Group style="regular-zone" drag:enter="OnDragEnter($event)" drag:exit="OnDragExit($event)">
                    Listens to
                    <Div style="{ReturnActiveEvent('onDragEnter', 0.5f)}">DragEnter</Div>
                    and
                    <Div style="{ReturnActiveEvent('onDragExit', 0.5f)}">DragExit</Div>
                </Group>
                <Group attr:id="dropZone" style="drop-zone" drag:drop="DropDrag($event, $element)" drag:hover="OnDragHover($event)">
                    <Div if="IsInDropZone" style="dragme" drag:create="StartDrag($element)">Dragme</Div>
                </Group>
            </Div>
            <Div style="tell">
                            
                <Heading1>See which event is currently handled</Heading1>

                <Div style="code {ActiveEvent('onDragCreate')}">onDragCreate</Div>
                used to handle the initial drag event. Return a custom DragEvent instance
                that updates custom state every frame based on the mouse position.

                <Div style="code {ActiveEvent('onDragDrop')}">onDragDrop</Div>
                will register where you released the mouse button making it easy to drop
                whatever data you have stored in your DragEvent.

                <Div style="code {ActiveEvent('onDragMove')}">onDragMove</Div>
                has been registered in the class and not on a specific element so it
                will fire when dragging anywhere within the demo screen.

                <Div style="code {ActiveEvent('onDragHover')}]">onDragHover</Div>
                will shoot if you drag the box over the lower drop area.

                <Div style="code">onDragEnter</Div>
                enter the middle area while dragging to trigger.

                <Div style="code">onDragExit</Div>
                exit the middle area while dragging to trigger.

            </Div>
        </Group>
        <!--        <Heading1>Mouse Events</Heading1>-->
        <!--        <Group style="section">-->
        <!--            <Div style="show">-->
        <!--                <Group style="demo-box" mouse:hover="Hover($event)">Hover Me! Hover Position x: {LastHoverX} y: {LastHoverY}</Group>-->
        <!--            </Div>-->
        <!--            <Div style="tell">-->
        <!--                Do what the buttons say!-->
        <!--            </Div>-->
        <!--        </Group>-->
        <!--        <Heading1>Mouse Events in styles</Heading1>-->
        <!--        <Group style="section">-->
        <!--            <Div style="show">-->
        <!--                <Group style="demo-box changes-on-hover-and-active">-->
        <!--                    <Text>This will change it`s color to yellow on hover</Text>-->
        <!--                    <Text>and to red on active. Hold the left mouse button down for active state.</Text>-->
        <!--                </Group>-->
        <!--            </Div>-->
        <!--        </Group>-->
        <!--        -->
        <!--        <Group style="section">-->
        <!--            <Div style="show">-->
        <!--                <Group style="demo-box show-context-menu" onMouseContext="ShowContextMenu($event)">-->
        <!--                    <Text>Right-Click this box to show a context menu</Text>-->
        <!--                </Group>-->
        <!--                <Div if="IsContextMenuVisible" style="context-menu" style.AnchorTop="LastContext.y" style.AnchorLeft="LastContext.x">-->
        <!--                    <Div style="context-menu-item">Open</Div>-->
        <!--                    <Div style="context-menu-item">Send to</Div>-->
        <!--                    <Div style="context-menu-item">View</Div>-->
        <!--                    <Div style="context-menu-item">Refresh</Div>-->
        <!--                    <Div style="context-menu-item">Properties</Div>-->
        <!--                </Div>-->
        <!--            </Div>-->
        <!--        </Group>-->
    </Contents>
</UITemplate>