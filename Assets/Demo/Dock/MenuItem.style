import "Demo/Theme.style" as theme;

animation go-up {
    [options] {
        duration = 200;
    }
    [keyframes] {
        100% { TransformPositionY = -10px; }
    }
}

animation go-down {
    [options] {
        duration = 200;
    }
    [keyframes] {
        100% { TransformPositionY = 0; }
    }
}

style <this> {
    FlexLayoutCrossAxisAlignment = Center;
    Margin = 0 4px;
    PreferredWidth = 64px;
}

style notification-count {
    PreferredWidth = 24px;
    BackgroundColor = red;
    BorderColor = white;
    Border = 2px;
    BorderRadius = 50%;
    LayoutBehavior = Ignored;
    TextColor = white;
    FlexLayoutCrossAxisAlignment = Center;
    FlexLayoutMainAxisAlignment = Center;
   
    AlignmentBehaviorX = Parent;
    AlignmentBehaviorY = Parent;
    AlignX = 110%;
    AlignY = -5px 0;
    
}

style menu-label {
    AlignY = 100% Parent;
    AlignX = 50%;
    TextColor = White;
    Visibility = Hidden;
    PreferredHeight = 22px;
    TextUnderlayColor = black;
    TextUnderlayDilate = 1;
    TextUnderlayOffsetX = 0.1;
    TextUnderlayOffsetY = 0.4;
     
    [attr:show="true"] {
        Visibility = Visible;
    }
}


style menu-image { 
    ShadowOffsetY = 5;
    ShadowOffsetX = 5;
    run animation(go-down);
    run animation(animshadow);

    [hover] {
        run animation(go-up);
    }
}

animation animshadow {
    [options] {
        Duration = 1000;
        Iterations = Infinite;
        LoopType = PingPong;
        TimingFunction = Linear;
    }
    [keyframes] {
        0% {
            ShadowIntensity = 20;
            ShadowColor = black;
            ShadowSizeX = 1;
            ShadowSizeY = 1;
        }
        
        100% {
            ShadowIntensity = 22;
            ShadowColor = rgb(30, 30, 30);
            ShadowSizeX = -1;
            ShadowSizeY = -10;
        }
    }
}