import "Demo/Theme.style" as theme;

style <this> {
    LayoutBehavior = Ignored;
    TextFontAsset = @theme.fontGothamLight;
}

style chat-window {
    PreferredSize = 1024px 600px;
    MinWidth = 1024px;
    MinHeight = 600px;
    TransformPosition = 0.05vw 0.05vh;
}

style chat-body {
    LayoutType = Grid;
    GridLayoutColTemplate = 1mx 1fr;
    Padding = 20px;
    PreferredSize = 1pca;
}

style chat-nav {
    PreferredSize = 300px 1pca;
    BackgroundColor = @theme.lightestGrey;
    Padding = 10px;
}

style chat-nav-header {
    FlexLayoutDirection = Horizontal;
    FlexLayoutMainAxisAlignment = SpaceBetween;
    FlexLayoutCrossAxisAlignment = Center;
    PreferredWidth = 1pca;
    Margin = 0 0 10px 0;
    Padding = 0 3px 0 10px;
}

style <Heading2> {
    TextTransform = UpperCase;
    TextFontSize = 0.9em;
    TextFontAsset = @theme.fontGothamBold;
    TextColor = @theme.lighterGrey;
}

style expander {
    Padding = 2px 5px;
    MarginRight = 4px;
    [hover] {
        BackgroundColor = @theme.lightGrey;
    }
}

style current-chat {
    PreferredSize = 1pca 40px;
    FlexLayoutDirection = Horizontal;
    FlexLayoutCrossAxisAlignment = Center;
    BorderRadius = 4px;
    Padding = 0 10px;
 
    [hover] {
        BackgroundColor = @theme.lightGrey;
    }
}

style user-icon {
    PreferredSize = 25px;
    Margin = 0 10px 0 0;
}

style status {
    PreferredSize = 25px;
    FlexLayoutCrossAxisAlignment = Center;
    FlexLayoutMainAxisAlignment = Center;
    PaddingRight = 10px;
    AlignX = 100% Parent;
}

style online {
    PreferredSize = 10px;
    BackgroundColor = rgb(2, 209, 116);
    BorderRadius = 50%;
}

style offline {
    PreferredSize = 10px;
    BackgroundColor = @theme.lighterGrey;
    BorderRadius = 50%;
}

style unread {
    PreferredSize = 20px;
    BackgroundColor = red;
    TextColor = white;
    TextFontAsset = @theme.fontGothamBold;
    TextFontSize = 12px;
    BorderRadius = 50%;
    FlexLayoutCrossAxisAlignment = Center;
    FlexLayoutMainAxisAlignment = Center;
}

style chat-messages {
    MarginLeft = 20px;
    LayoutFitHorizontal = Fill;
}

style <Heading1> {
    TextFontSize = 1.1em;
    TextColor = @theme.darkGrey;
    Margin = 0 0 20px 0;
}

style message {
    BorderColor = @theme.lightestGrey;
    BorderTop = 1px;
    LayoutFitHorizontal = Fill;
    FlexLayoutDirection = Horizontal;
    Padding = 20px 0;
}

style message-content {
    FlexLayoutDirection = Vertical;   
}

style message-info-line {
    FlexLayoutDirection = Horizontal;
    FlexLayoutCrossAxisAlignment = Center;
    MarginBottom = 10px;
}

style user-icon-message {
    PreferredSize = 40px;
    MarginRight = 20px;
}

style text { LayoutFitHorizontal = Fill; }

style name {
    TextFontAsset = @theme.fontGothamBold;
    TextFontSize = 1em;
    MarginRight = 15px;
}

style date {
    TextFontAsset = @theme.fontGothamLight;
    TextFontSize = 0.8em;
}

style fill-container {
    PreferredHeight = 1pca;
    LayoutFitHorizontal = Fill;
    LayoutType = Grid;
    GridLayoutColTemplate = 1fr;
    GridLayoutRowTemplate = 1fr 1mx;
}

style message-scroll-view {
    LayoutFitHorizontal = Fill;
    PreferredHeight = 0;
}

style input-container {
    Padding = 0 20px;
    BorderRadius = 4px;
    BackgroundColor = @theme.lightestGrey;
    FlexLayoutDirection = Horizontal;
    FlexLayoutCrossAxisAlignment = Center;
    LayoutFitHorizontal = Fill;
    AlignY = 100% Parent;
}

style message-input {
    Border = 0;
    TextFontSize = 1em;
    Padding = 20px 0;
    Margin = 0;
    BackgroundColor = @theme.lightestGrey;
    PreferredSize = 0 1cnt;
    MaxWidth = 1pca;
    FlexItemGrow = 1;
    LayoutFitHorizontal = Fill;
    Cursor = @theme.cursorTextInput;
}

style emoji {
    PreferredSize = 28px;
    Margin = 20px 5px;
    AlignX = 100% ParentContentArea;
}