import "Demo/Theme.style" as theme;

const durationDialog = 600;
const topBarFramePad = 0.7em;
const topBarTextSize = 12px;
const iconSize = 30px;

animation show {
    [options] {
        duration = @durationDialog;
        timingFunction = CubicEaseInOut;
    }
    
    [keyframes] {
        100% { AlignY = 100%; }
    }
}
animation hide {
    [options] {
        duration = @durationDialog;
        timingFunction = CubicEaseInOut;
    }
    
    [keyframes] {
        100% { AlignY = 200% 100%; }
    }
}

style <this> {
    PreferredSize = 1024px 512px;
    BackgroundColor = white;
    TextFontAsset = @theme.fontGothamBold;
    LayoutType = Grid;
    GridLayoutColTemplate = 1pca;
    GridLayoutRowTemplate = 1mx 1fr 1mx;
    GridLayoutColAlignment = Start;
    GridLayoutColAlignment = Fit;
    GridLayoutRowAlignment = Fit;
    Cursor = @theme.cursorDefault;   
    AlignX = 100% Parent;
    AlignY = 200% 100%;
    AlignmentBehaviorY = Parent;
    
    [attr:placement="show"] {
        run animation(show);
    }
    [attr:placement="hide"] {
        run animation(hide);
    }
}

style confirm-color { BackgroundColor = @theme.confirmColor; }
style save-exit-color { BackgroundColor = @theme.saveExitColor; }
style cancel-color { BackgroundColor = @theme.cancelColor; }

style confirm-text-color { TextColor = @theme.confirmColor; }
style cancel-text-color { TextColor = @theme.cancelColor; }

//style corner-cut-window {
//    PreferredSize = 800px 600px;
//    BackgroundColor = white;
//    Painter = "SeedWindow:TopLeft";
//}
