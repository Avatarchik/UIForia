import "Demo/Theme.style" as theme;
const durationDialog = 500;
const topBarFramePad = 0.7em;
const topBarTextSize = 12px;
const iconSize = 30px;

animation show {
    [options] {
        duration = 600;
        timingFunction = CubicEaseInOut;
    }
    
    [keyframes] {
        100% { AlignY = 100%; }
    }
}
animation hide {
    [options] {
        duration = 600;
        timingFunction = CubicEaseInOut;
    }
    
    [keyframes] {
        100% { AlignY = 200% 100%; }
    }
}

style <this> {
    PreferredSize = 1024px 512px;
    BackgroundColor = white;
    TextFontAsset = @theme.fontGothamBold;
    LayoutType = Grid;
    GridLayoutColTemplate = 1pca;
    GridLayoutRowTemplate = 1mx 1fr 1mx;
    GridLayoutColAlignment = Start;
        GridLayoutColAlignment = Fit;
        GridLayoutRowAlignment = Fit;
    Cursor = @theme.cursorDefault;   
//    FlexLayoutDirection = Horizontal;
//    FlexLayoutCrossAxisAlignment = End;
    AlignX = 100% Parent;
    AlignY = 100% Parent;
    
    [attr:placement="show"] {
        run animation(show);
    }
    [attr:placement="hide"] {
        run animation(hide);
    }
}

style confirm-color { BackgroundColor = @theme.confirmColor; }
style save-exit-color { BackgroundColor = @theme.saveExitColor; }
style cancel-color { BackgroundColor = @theme.cancelColor; }
style color-grey { BackgroundColor = @theme.lightGrey; }

style confirm-text-color { TextColor = @theme.confirmColor; }
style save-exit-text-color { TextColor = @theme.saveExitColor; }
style cancel-text-color { TextColor = @theme.cancelColor; }

//style corner-cut-window {
//    PreferredSize = 800px 600px;
//    BackgroundColor = white;
//    Painter = "SeedWindow:TopLeft";
//}

style menu-icon {
    BorderRadius = 50%;
    BorderColor = Black;
    Border = 3px;
}

animation open-shortcuts {
    [options] {
        duration = @durationDialog;
        timingFunction = CubicEaseInOut;
    }
    
    [keyframes] {
        0% {
            TransformPositionY = 450px;
        }
        
        100% {
            TransformPositionY = 30px;
        }
    }
}

animation close-shortcuts {
    [options] {
        duration = @durationDialog;
        timingFunction = CubicEaseInOut;
    }
    
    [keyframes] {
        0% {
            TransformPositionY = 30px;
        }
        
        100% {
            TransformPositionY = 450px;
        }
    }
}

style screen-bottom-right {
    LayoutBehavior = Ignored;
    AnchorBottom = 0;
    AnchorRight = 0;
    TransformBehaviorX = AnchorMaxOffset;
    TransformBehaviorY = AnchorMaxOffset;
}

style select-height {
    PreferredWidth = 400px;
}

style building-designer-help {
    LayoutBehavior = Ignored;

    BackgroundColor = rgba(0,0,0,250);
    TextColor = rgb(200, 200, 200);

    PreferredHeight = 450px;
    PreferredWidth = 330px;
    
    BorderRadius = 10px;
    
    MarginRight = 20px;
    
    TransformPositionY = 450px;
    TransformPositionX = -360px;
    Border = 0px;
    
    [hover] {
        Border = 2px;
        BorderColor = lightGrey;
    }
}
