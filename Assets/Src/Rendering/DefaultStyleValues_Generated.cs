using Shapes2D;
using UIForia.Layout;
using UIForia.Layout.LayoutTypes;
using TMPro;
using System.Collections.Generic;
using UnityEngine;
using UIForia.Util;
using UIForia.Text;
using FontStyle = UIForia.Text.FontStyle;
using TextAlignment = UIForia.Text.TextAlignment;

// Do not edit this file. See CodeGen.cs instead.

namespace UIForia.Rendering {

    public static class DefaultStyleValues_Generated {

        public const Overflow OverflowX = UIForia.Rendering.Overflow.None;
        public const Overflow OverflowY = UIForia.Rendering.Overflow.None;
        public static readonly Color BorderColor = new Color(-1f, -1f, -1f, -1f);
        public static readonly Color BackgroundColor = new Color(-1f, -1f, -1f, -1f);
        public static readonly Color BackgroundColorSecondary = new Color(-1f, -1f, -1f, -1f);
        public static readonly Texture2D BackgroundImage = null;
        public static readonly Texture2D BackgroundImage1 = null;
        public static readonly Texture2D BackgroundImage2 = null;
        public const GradientType BackgroundGradientType = Shapes2D.GradientType.Linear;
        public const GradientAxis BackgroundGradientAxis = Shapes2D.GradientAxis.Horizontal;
        public const float BackgroundGradientStart = 0;
        public const float BackgroundFillRotation = 0;
        public const BackgroundFillType BackgroundFillType = UIForia.Rendering.BackgroundFillType.Normal;
        public const BackgroundShapeType BackgroundShapeType = UIForia.Rendering.BackgroundShapeType.Rectangle;
        public const float BackgroundFillOffsetX = 0;
        public const float BackgroundFillOffsetY = 0;
        public const float BackgroundFillScaleX = 1;
        public const float BackgroundFillScaleY = 1;
        public const int FlexItemOrder = 0;
        public const int FlexItemGrow = 0;
        public const int FlexItemShrink = 0;
        public const CrossAxisAlignment FlexItemSelfAlignment = UIForia.Layout.CrossAxisAlignment.Unset;
        public const LayoutDirection FlexLayoutDirection = UIForia.Rendering.LayoutDirection.Row;
        public const LayoutWrap FlexLayoutWrap = UIForia.Rendering.LayoutWrap.None;
        public const MainAxisAlignment FlexLayoutMainAxisAlignment = UIForia.Layout.MainAxisAlignment.Start;
        public const CrossAxisAlignment FlexLayoutCrossAxisAlignment = UIForia.Layout.CrossAxisAlignment.Start;
        public const int GridItemColStart = 2147483647;
        public const int GridItemColSpan = 1;
        public const int GridItemRowStart = 2147483647;
        public const int GridItemRowSpan = 1;
        public const CrossAxisAlignment GridItemColSelfAlignment = UIForia.Layout.CrossAxisAlignment.Unset;
        public const CrossAxisAlignment GridItemRowSelfAlignment = UIForia.Layout.CrossAxisAlignment.Unset;
        public const LayoutDirection GridLayoutDirection = UIForia.Rendering.LayoutDirection.Row;
        public const GridLayoutDensity GridLayoutDensity = UIForia.Layout.GridLayoutDensity.Sparse;
        public static readonly IReadOnlyList<GridTrackSize> GridLayoutColTemplate = ListPool<GridTrackSize>.Empty;
        public static readonly IReadOnlyList<GridTrackSize> GridLayoutRowTemplate = ListPool<GridTrackSize>.Empty;
        public static readonly GridTrackSize GridLayoutColAutoSize = new GridTrackSize(1, GridTemplateUnit.MaxContent);
        public static readonly GridTrackSize GridLayoutRowAutoSize = new GridTrackSize(1, GridTemplateUnit.MaxContent);
        public const float GridLayoutColGap = 0;
        public const float GridLayoutRowGap = 0;
        public const CrossAxisAlignment GridLayoutColAlignment = UIForia.Layout.CrossAxisAlignment.Start;
        public const CrossAxisAlignment GridLayoutRowAlignment = UIForia.Layout.CrossAxisAlignment.Start;
        public static readonly UIMeasurement MinWidth = new UIMeasurement(0, UIMeasurementUnit.Pixel);
        public static readonly UIMeasurement MaxWidth = new UIMeasurement(3.402823E+38, UIMeasurementUnit.Pixel);
        public static readonly UIMeasurement PreferredWidth = new UIMeasurement(1, UIMeasurementUnit.Content);
        public static readonly UIMeasurement MinHeight = new UIMeasurement(0, UIMeasurementUnit.Pixel);
        public static readonly UIMeasurement MaxHeight = new UIMeasurement(3.402823E+38, UIMeasurementUnit.Pixel);
        public static readonly UIMeasurement PreferredHeight = new UIMeasurement(1, UIMeasurementUnit.Content);
        public static readonly UIMeasurement MarginTop = new UIMeasurement(0, UIMeasurementUnit.Pixel);
        public static readonly UIMeasurement MarginRight = new UIMeasurement(0, UIMeasurementUnit.Pixel);
        public static readonly UIMeasurement MarginBottom = new UIMeasurement(0, UIMeasurementUnit.Pixel);
        public static readonly UIMeasurement MarginLeft = new UIMeasurement(0, UIMeasurementUnit.Pixel);
        public static readonly UIFixedLength BorderTop = new UIFixedLength(0, UIFixedUnit.Pixel);
        public static readonly UIFixedLength BorderRight = new UIFixedLength(0, UIFixedUnit.Pixel);
        public static readonly UIFixedLength BorderBottom = new UIFixedLength(0, UIFixedUnit.Pixel);
        public static readonly UIFixedLength BorderLeft = new UIFixedLength(0, UIFixedUnit.Pixel);
        public static readonly UIFixedLength BorderRadiusTopLeft = new UIFixedLength(0, UIFixedUnit.Pixel);
        public static readonly UIFixedLength BorderRadiusTopRight = new UIFixedLength(0, UIFixedUnit.Pixel);
        public static readonly UIFixedLength BorderRadiusBottomRight = new UIFixedLength(0, UIFixedUnit.Pixel);
        public static readonly UIFixedLength BorderRadiusBottomLeft = new UIFixedLength(0, UIFixedUnit.Pixel);
        public static readonly UIFixedLength PaddingTop = new UIFixedLength(0, UIFixedUnit.Pixel);
        public static readonly UIFixedLength PaddingRight = new UIFixedLength(0, UIFixedUnit.Pixel);
        public static readonly UIFixedLength PaddingBottom = new UIFixedLength(0, UIFixedUnit.Pixel);
        public static readonly UIFixedLength PaddingLeft = new UIFixedLength(0, UIFixedUnit.Pixel);
        public static readonly Color TextColor = new Color(0f, 0f, 0f, 1f);
        public static readonly TMP_FontAsset TextFontAsset = TMP_FontAsset.defaultFontAsset;
        public const int TextFontSize = 18;
        public const FontStyle TextFontStyle = UIForia.Text.FontStyle.Normal;
        public const TextAlignment TextAlignment = UIForia.Text.TextAlignment.Left;
        public const TextTransform TextTransform = UIForia.Text.TextTransform.None;
        public static readonly UIFixedLength AnchorTop = new UIFixedLength(0, UIFixedUnit.Percent);
        public static readonly UIFixedLength AnchorRight = new UIFixedLength(1, UIFixedUnit.Percent);
        public static readonly UIFixedLength AnchorBottom = new UIFixedLength(1, UIFixedUnit.Percent);
        public static readonly UIFixedLength AnchorLeft = new UIFixedLength(0, UIFixedUnit.Percent);
        public const AnchorTarget AnchorTarget = UIForia.Rendering.AnchorTarget.Parent;
        public static readonly UIFixedLength TransformPositionX = new UIFixedLength(0, UIFixedUnit.Pixel);
        public static readonly UIFixedLength TransformPositionY = new UIFixedLength(0, UIFixedUnit.Pixel);
        public static readonly UIFixedLength TransformPivotX = new UIFixedLength(0, UIFixedUnit.Pixel);
        public static readonly UIFixedLength TransformPivotY = new UIFixedLength(0, UIFixedUnit.Pixel);
        public const float TransformScaleX = 1;
        public const float TransformScaleY = 1;
        public const float TransformRotation = 0;
        public const TransformBehavior TransformBehaviorX = UIForia.Rendering.TransformBehavior.Default;
        public const TransformBehavior TransformBehaviorY = UIForia.Rendering.TransformBehavior.Default;
        public const LayoutType LayoutType = UIForia.Rendering.LayoutType.Flex;
        public const LayoutBehavior LayoutBehavior = UIForia.Layout.LayoutBehavior.Normal;
        public const int ZIndex = 0;
        public const int RenderLayerOffset = 0;
        public const RenderLayer RenderLayer = UIForia.Rendering.RenderLayer.Default;

        public static StyleProperty GetPropertyValue(StylePropertyId propertyId) {
            switch (propertyId) {
                case StylePropertyId.OverflowX:
                    return new StyleProperty(StylePropertyId.OverflowX, (int) UIForia.Rendering.Overflow.None);
                case StylePropertyId.OverflowY:
                    return new StyleProperty(StylePropertyId.OverflowY, (int) UIForia.Rendering.Overflow.None);
                case StylePropertyId.BorderColor:
                    return new StyleProperty(StylePropertyId.BorderColor, new Color(-1f, -1f, -1f, -1f));
                case StylePropertyId.BackgroundColor:
                    return new StyleProperty(StylePropertyId.BackgroundColor, new Color(-1f, -1f, -1f, -1f));
                case StylePropertyId.BackgroundColorSecondary:
                    return new StyleProperty(StylePropertyId.BackgroundColorSecondary, new Color(-1f, -1f, -1f, -1f));
                case StylePropertyId.BackgroundImage:
                    return new StyleProperty(StylePropertyId.BackgroundImage, 0, 0, null);
                case StylePropertyId.BackgroundImage1:
                    return new StyleProperty(StylePropertyId.BackgroundImage1, 0, 0, null);
                case StylePropertyId.BackgroundImage2:
                    return new StyleProperty(StylePropertyId.BackgroundImage2, 0, 0, null);
                case StylePropertyId.BackgroundGradientType:
                    return new StyleProperty(StylePropertyId.BackgroundGradientType, (int) Shapes2D.GradientType.Linear);
                case StylePropertyId.BackgroundGradientAxis:
                    return new StyleProperty(StylePropertyId.BackgroundGradientAxis, (int) Shapes2D.GradientAxis.Horizontal);
                case StylePropertyId.BackgroundGradientStart:
                    return new StyleProperty(StylePropertyId.BackgroundGradientStart, 0);
                case StylePropertyId.BackgroundFillRotation:
                    return new StyleProperty(StylePropertyId.BackgroundFillRotation, 0);
                case StylePropertyId.BackgroundFillType:
                    return new StyleProperty(StylePropertyId.BackgroundFillType, (int) UIForia.Rendering.BackgroundFillType.Normal);
                case StylePropertyId.BackgroundShapeType:
                    return new StyleProperty(StylePropertyId.BackgroundShapeType, (int) UIForia.Rendering.BackgroundShapeType.Rectangle);
                case StylePropertyId.BackgroundFillOffsetX:
                    return new StyleProperty(StylePropertyId.BackgroundFillOffsetX, 0);
                case StylePropertyId.BackgroundFillOffsetY:
                    return new StyleProperty(StylePropertyId.BackgroundFillOffsetY, 0);
                case StylePropertyId.BackgroundFillScaleX:
                    return new StyleProperty(StylePropertyId.BackgroundFillScaleX, 1);
                case StylePropertyId.BackgroundFillScaleY:
                    return new StyleProperty(StylePropertyId.BackgroundFillScaleY, 1);
                case StylePropertyId.FlexItemOrder:
                    return new StyleProperty(StylePropertyId.FlexItemOrder, 0);
                case StylePropertyId.FlexItemGrow:
                    return new StyleProperty(StylePropertyId.FlexItemGrow, 0);
                case StylePropertyId.FlexItemShrink:
                    return new StyleProperty(StylePropertyId.FlexItemShrink, 0);
                case StylePropertyId.FlexItemSelfAlignment:
                    return new StyleProperty(StylePropertyId.FlexItemSelfAlignment, (int) UIForia.Layout.CrossAxisAlignment.Unset);
                case StylePropertyId.FlexLayoutDirection:
                    return new StyleProperty(StylePropertyId.FlexLayoutDirection, (int) UIForia.Rendering.LayoutDirection.Row);
                case StylePropertyId.FlexLayoutWrap:
                    return new StyleProperty(StylePropertyId.FlexLayoutWrap, (int) UIForia.Rendering.LayoutWrap.None);
                case StylePropertyId.FlexLayoutMainAxisAlignment:
                    return new StyleProperty(StylePropertyId.FlexLayoutMainAxisAlignment, (int) UIForia.Layout.MainAxisAlignment.Start);
                case StylePropertyId.FlexLayoutCrossAxisAlignment:
                    return new StyleProperty(StylePropertyId.FlexLayoutCrossAxisAlignment, (int) UIForia.Layout.CrossAxisAlignment.Start);
                case StylePropertyId.GridItemColStart:
                    return new StyleProperty(StylePropertyId.GridItemColStart, 2147483647);
                case StylePropertyId.GridItemColSpan:
                    return new StyleProperty(StylePropertyId.GridItemColSpan, 1);
                case StylePropertyId.GridItemRowStart:
                    return new StyleProperty(StylePropertyId.GridItemRowStart, 2147483647);
                case StylePropertyId.GridItemRowSpan:
                    return new StyleProperty(StylePropertyId.GridItemRowSpan, 1);
                case StylePropertyId.GridItemColSelfAlignment:
                    return new StyleProperty(StylePropertyId.GridItemColSelfAlignment, (int) UIForia.Layout.CrossAxisAlignment.Unset);
                case StylePropertyId.GridItemRowSelfAlignment:
                    return new StyleProperty(StylePropertyId.GridItemRowSelfAlignment, (int) UIForia.Layout.CrossAxisAlignment.Unset);
                case StylePropertyId.GridLayoutDirection:
                    return new StyleProperty(StylePropertyId.GridLayoutDirection, (int) UIForia.Rendering.LayoutDirection.Row);
                case StylePropertyId.GridLayoutDensity:
                    return new StyleProperty(StylePropertyId.GridLayoutDensity, (int) UIForia.Layout.GridLayoutDensity.Sparse);
                case StylePropertyId.GridLayoutColTemplate:
                    return new StyleProperty(StylePropertyId.GridLayoutColTemplate, 0, 0, ListPool<GridTrackSize>.Empty);
                case StylePropertyId.GridLayoutRowTemplate:
                    return new StyleProperty(StylePropertyId.GridLayoutRowTemplate, 0, 0, ListPool<GridTrackSize>.Empty);
                case StylePropertyId.GridLayoutColAutoSize:
                    return new StyleProperty(StylePropertyId.GridLayoutColAutoSize, new GridTrackSize(1, GridTemplateUnit.MaxContent));
                case StylePropertyId.GridLayoutRowAutoSize:
                    return new StyleProperty(StylePropertyId.GridLayoutRowAutoSize, new GridTrackSize(1, GridTemplateUnit.MaxContent));
                case StylePropertyId.GridLayoutColGap:
                    return new StyleProperty(StylePropertyId.GridLayoutColGap, 0);
                case StylePropertyId.GridLayoutRowGap:
                    return new StyleProperty(StylePropertyId.GridLayoutRowGap, 0);
                case StylePropertyId.GridLayoutColAlignment:
                    return new StyleProperty(StylePropertyId.GridLayoutColAlignment, (int) UIForia.Layout.CrossAxisAlignment.Start);
                case StylePropertyId.GridLayoutRowAlignment:
                    return new StyleProperty(StylePropertyId.GridLayoutRowAlignment, (int) UIForia.Layout.CrossAxisAlignment.Start);
                case StylePropertyId.MinWidth:
                    return new StyleProperty(StylePropertyId.MinWidth, new UIMeasurement(0, UIMeasurementUnit.Pixel));
                case StylePropertyId.MaxWidth:
                    return new StyleProperty(StylePropertyId.MaxWidth, new UIMeasurement(3.402823E+38, UIMeasurementUnit.Pixel));
                case StylePropertyId.PreferredWidth:
                    return new StyleProperty(StylePropertyId.PreferredWidth, new UIMeasurement(1, UIMeasurementUnit.Content));
                case StylePropertyId.MinHeight:
                    return new StyleProperty(StylePropertyId.MinHeight, new UIMeasurement(0, UIMeasurementUnit.Pixel));
                case StylePropertyId.MaxHeight:
                    return new StyleProperty(StylePropertyId.MaxHeight, new UIMeasurement(3.402823E+38, UIMeasurementUnit.Pixel));
                case StylePropertyId.PreferredHeight:
                    return new StyleProperty(StylePropertyId.PreferredHeight, new UIMeasurement(1, UIMeasurementUnit.Content));
                case StylePropertyId.MarginTop:
                    return new StyleProperty(StylePropertyId.MarginTop, new UIMeasurement(0, UIMeasurementUnit.Pixel));
                case StylePropertyId.MarginRight:
                    return new StyleProperty(StylePropertyId.MarginRight, new UIMeasurement(0, UIMeasurementUnit.Pixel));
                case StylePropertyId.MarginBottom:
                    return new StyleProperty(StylePropertyId.MarginBottom, new UIMeasurement(0, UIMeasurementUnit.Pixel));
                case StylePropertyId.MarginLeft:
                    return new StyleProperty(StylePropertyId.MarginLeft, new UIMeasurement(0, UIMeasurementUnit.Pixel));
                case StylePropertyId.BorderTop:
                    return new StyleProperty(StylePropertyId.BorderTop, new UIFixedLength(0, UIFixedUnit.Pixel));
                case StylePropertyId.BorderRight:
                    return new StyleProperty(StylePropertyId.BorderRight, new UIFixedLength(0, UIFixedUnit.Pixel));
                case StylePropertyId.BorderBottom:
                    return new StyleProperty(StylePropertyId.BorderBottom, new UIFixedLength(0, UIFixedUnit.Pixel));
                case StylePropertyId.BorderLeft:
                    return new StyleProperty(StylePropertyId.BorderLeft, new UIFixedLength(0, UIFixedUnit.Pixel));
                case StylePropertyId.BorderRadiusTopLeft:
                    return new StyleProperty(StylePropertyId.BorderRadiusTopLeft, new UIFixedLength(0, UIFixedUnit.Pixel));
                case StylePropertyId.BorderRadiusTopRight:
                    return new StyleProperty(StylePropertyId.BorderRadiusTopRight, new UIFixedLength(0, UIFixedUnit.Pixel));
                case StylePropertyId.BorderRadiusBottomRight:
                    return new StyleProperty(StylePropertyId.BorderRadiusBottomRight, new UIFixedLength(0, UIFixedUnit.Pixel));
                case StylePropertyId.BorderRadiusBottomLeft:
                    return new StyleProperty(StylePropertyId.BorderRadiusBottomLeft, new UIFixedLength(0, UIFixedUnit.Pixel));
                case StylePropertyId.PaddingTop:
                    return new StyleProperty(StylePropertyId.PaddingTop, new UIFixedLength(0, UIFixedUnit.Pixel));
                case StylePropertyId.PaddingRight:
                    return new StyleProperty(StylePropertyId.PaddingRight, new UIFixedLength(0, UIFixedUnit.Pixel));
                case StylePropertyId.PaddingBottom:
                    return new StyleProperty(StylePropertyId.PaddingBottom, new UIFixedLength(0, UIFixedUnit.Pixel));
                case StylePropertyId.PaddingLeft:
                    return new StyleProperty(StylePropertyId.PaddingLeft, new UIFixedLength(0, UIFixedUnit.Pixel));
                case StylePropertyId.TextColor:
                    return new StyleProperty(StylePropertyId.TextColor, new Color(0f, 0f, 0f, 1f));
                case StylePropertyId.TextFontAsset:
                    return new StyleProperty(StylePropertyId.TextFontAsset, 0, 0, TMP_FontAsset.defaultFontAsset);
                case StylePropertyId.TextFontSize:
                    return new StyleProperty(StylePropertyId.TextFontSize, 18);
                case StylePropertyId.TextFontStyle:
                    return new StyleProperty(StylePropertyId.TextFontStyle, (int) UIForia.Text.FontStyle.Normal);
                case StylePropertyId.TextAlignment:
                    return new StyleProperty(StylePropertyId.TextAlignment, (int) UIForia.Text.TextAlignment.Left);
                case StylePropertyId.TextTransform:
                    return new StyleProperty(StylePropertyId.TextTransform, (int) UIForia.Text.TextTransform.None);
                case StylePropertyId.AnchorTop:
                    return new StyleProperty(StylePropertyId.AnchorTop, new UIFixedLength(0, UIFixedUnit.Percent));
                case StylePropertyId.AnchorRight:
                    return new StyleProperty(StylePropertyId.AnchorRight, new UIFixedLength(1, UIFixedUnit.Percent));
                case StylePropertyId.AnchorBottom:
                    return new StyleProperty(StylePropertyId.AnchorBottom, new UIFixedLength(1, UIFixedUnit.Percent));
                case StylePropertyId.AnchorLeft:
                    return new StyleProperty(StylePropertyId.AnchorLeft, new UIFixedLength(0, UIFixedUnit.Percent));
                case StylePropertyId.AnchorTarget:
                    return new StyleProperty(StylePropertyId.AnchorTarget, (int) UIForia.Rendering.AnchorTarget.Parent);
                case StylePropertyId.TransformPositionX:
                    return new StyleProperty(StylePropertyId.TransformPositionX, new UIFixedLength(0, UIFixedUnit.Pixel));
                case StylePropertyId.TransformPositionY:
                    return new StyleProperty(StylePropertyId.TransformPositionY, new UIFixedLength(0, UIFixedUnit.Pixel));
                case StylePropertyId.TransformPivotX:
                    return new StyleProperty(StylePropertyId.TransformPivotX, new UIFixedLength(0, UIFixedUnit.Pixel));
                case StylePropertyId.TransformPivotY:
                    return new StyleProperty(StylePropertyId.TransformPivotY, new UIFixedLength(0, UIFixedUnit.Pixel));
                case StylePropertyId.TransformScaleX:
                    return new StyleProperty(StylePropertyId.TransformScaleX, 1);
                case StylePropertyId.TransformScaleY:
                    return new StyleProperty(StylePropertyId.TransformScaleY, 1);
                case StylePropertyId.TransformRotation:
                    return new StyleProperty(StylePropertyId.TransformRotation, 0);
                case StylePropertyId.TransformBehaviorX:
                    return new StyleProperty(StylePropertyId.TransformBehaviorX, (int) UIForia.Rendering.TransformBehavior.Default);
                case StylePropertyId.TransformBehaviorY:
                    return new StyleProperty(StylePropertyId.TransformBehaviorY, (int) UIForia.Rendering.TransformBehavior.Default);
                case StylePropertyId.LayoutType:
                    return new StyleProperty(StylePropertyId.LayoutType, (int) UIForia.Rendering.LayoutType.Flex);
                case StylePropertyId.LayoutBehavior:
                    return new StyleProperty(StylePropertyId.LayoutBehavior, (int) UIForia.Layout.LayoutBehavior.Normal);
                case StylePropertyId.ZIndex:
                    return new StyleProperty(StylePropertyId.ZIndex, 0);
                case StylePropertyId.RenderLayerOffset:
                    return new StyleProperty(StylePropertyId.RenderLayerOffset, 0);
                case StylePropertyId.RenderLayer:
                    return new StyleProperty(StylePropertyId.RenderLayer, (int) UIForia.Rendering.RenderLayer.Default);
                default: throw new System.ArgumentOutOfRangeException(nameof(propertyId), propertyId, null);
            }
        }

    }

}