import "Documentation/Documentation.style" as theme;

animation maximize {
    [options] {
        duration = 340;
        timingFunction = CubicEaseInOut;
    }
    
    [keyframes] {
        100% {
            AlignX = 0%;
            AlignY = 0%;
            TransformPosition = 0;
            PreferredSize = 1vw 1vh;
        }
    }
}

animation minimize {
    [options] {
        duration = 340;
        timingFunction = CubicEaseInOut;
    }
    
    [keyframes] {
        100% {
            PreferredHeight = 64px;
            MinHeight = 64;
        }
    }
}

animation restore {
    [options] {
        duration = 340;
        timingFunction = CubicEaseInOut;
    }

    [keyframes] {
        100% {
            PreferredSize = 1024px 500px;
            MinHeight = 500px;
        }
    }
}

animation enter-button {
    [options] {
        duration = 200;
        timingFunction = CubicEaseIn;
    }
    [keyframes] {
        100% { PreferredSize = 16px 4px; }
    }
}

animation exit-button {
    [options] {
        duration = 200;
        timingFunction = CubicEaseIn;
    }
    [keyframes] {
        100% { PreferredSize = 0; }
    }
}

style window-very-large {
    PreferredSize = 1440px 900px;
}

style window-large {
    PreferredSize = 800px 600px;
}

style window-vertical-large {
    PreferredSize = 500px 800px;
}

style window-small {
    PreferredSize = 500px 300px;
}

style window-container {
    PreferredSize = 600px 400px;
    CornerBevelBottomRight = 20px;
    AlignX = 80px Parent;
    AlignY = 80px Parent;
    FlexLayoutDirection = Horizontal;

    [attr:minmax="maximize"] {
        [enter] run animation(maximize);
    }
    [attr:minmax="minimize"] {
        [enter] run animation(minimize);
    }
    [attr:minmax="restore"] {
        [enter] run animation(restore);
    }
}

style main-content {
    FlexItemShrink = 1;
    LayoutFit = Fill;
}

style title-bar {
    BackgroundColor = black;
    PreferredHeight = 64px;
    TextColor = white;
    TextFontAsset = @theme.fontGothamBold;
    TextTransform = UpperCase;
    FlexLayoutDirection = Horizontal;
    AlignItemsVertical = Center;
    DistributeExtraSpaceHorizontal = BetweenContent;
    TextFontSize = 1.1em;
    PaddingLeft = 1em;
    PaddingRight = 1em;
    LayoutFitHorizontal = Fill;
}

style side-bar-runner {
    PreferredSize = 8px 48px;
    LayoutBehavior = Ignored;
    TransformPositionY = 62px;
}

style side-bar-runner-display {
    BackgroundColor = white;
    PreferredSize = 1pca;
    MarginTop = 8px;
}

style side-bar-slot {
    PreferredWidth = 76px;
    DistributeExtraSpaceHorizontal = BeforeContent;
    BackgroundColor = black;
    MarginTop = 64px;
    PaddingBottom = 20px;
}

style side-bar-container {
    BackgroundColor = black;
    //AlignX = -76px 0% Parent;
}

style title-buttons {
    FlexLayoutDirection = Horizontal;
}

style title-button {
//    LayoutType = Stack;
    PreferredSize = 24px;
    Border = 2px;
    BorderRadius = 50%;
    MarginRight = 10px;
}

style title-button-part {
    AlignX = 50% Parent;
    AlignY = 50% Parent;
    BackgroundColor = black;
    [attr:hovered="true"] {
        [enter] run animation(enter-button);
        [exit] run animation(exit-button);
    } 
}

style left-leg {
    TransformRotation = -45;
}

style right-leg {
    TransformRotation = 45;
}

style minus-bar {
    MinHeight = 4px;
    TransformRotation = 0;
}

style horizontal {
    TransformRotation = 0;
}

style vertical {
    TransformRotation = 90;
}

style close-button {
    PreferredSize = 24px;
    Border = 2px;
    BorderRadius = 50%;
    BorderColor = #F3514E;
    [hover] {
        BackgroundColor = #F3514E;
    }
}

style body {
    BackgroundColor = White;
    CornerBevelBottomRight = 20px;
    PreferredSize = 1pca;
    FlexItemShrink = 1;
    Overflow = Scroll;
    FlexItemShrink = 1;
    LayoutFit = Fill;
}

style body-dark {
    BackgroundColor = rgba(0, 0, 0, 220);
    TextColor = white;
}