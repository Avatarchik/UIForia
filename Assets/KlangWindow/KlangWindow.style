import "Documentation/Documentation.style" as theme;

animation maximize {
    [options] {
        duration = 340;
        timingFunction = CubicEaseInOut;
    }
    
    [keyframes] {
        100% {
            AlignX = 0%;
            AlignY = 0%;
            TransformPosition = 0;
            PreferredSize = 1vw 1vh;
        }
    }
}

animation minimize {
    [options] {
        duration = 340;
        timingFunction = CubicEaseInOut;
    }
    
    [keyframes] {
        100% {
            PreferredHeight = 64px;
            MinHeight = 64;
        }
    }
}

animation restore {
    [options] {
        duration = 340;
        timingFunction = CubicEaseInOut;
    }

    [keyframes] {
        100% {
            PreferredSize = 1024px 500px;
            MinHeight = 500px;
        }
    }
}


style window-container {
    PreferredSize = 600px 400px;
    GridLayoutColTemplate = 1mx, 1fr;
    GridLayoutRowTemplate = 64px, 1fr;
    GridLayoutDirection = Horizontal;
    GridLayoutRowAlignment = Grow;
    GridLayoutColAlignment = Fit;
    LayoutType = Grid; 
    LayoutBehavior = Ignored;
    AlignmentTargetX = Parent;
    AlignmentTargetY = Parent;
    [attr:minmax="maximize"] {
        [enter] run animation(maximize);
    }
    [attr:minmax="minimize"] {
        [enter] run animation(minimize);
    }
    [attr:minmax="restore"] {
        [enter] run animation(restore);
    }
}

style title-bar {
    BackgroundColor = Black;
    PreferredHeight = 64px;
    TextColor = White;
    TextFontAsset = @theme.fontGothamBold;
    TextTransform = UpperCase;
    FlexLayoutDirection = Row;
    FlexLayoutCrossAxisAlignment = Center;
    TextFontSize = 1.1em;
    FlexLayoutMainAxisAlignment = SpaceBetween;
    PaddingLeft = 1em;
    PaddingRight = 1em;
    GridItemX = 1;
    GridItemY = 0;
}

style side-bar-runner {
    PreferredWidth = 8px;
    PreferredHeight = 48px;
    LayoutBehavior = Ignored;
}

style side-bar-runner-display {
    BackgroundColor = white;
    PreferredSize = 1pca;
    MarginTop = 8px;
}

style side-bar-slot {
    PreferredWidth = 76px;
    FlexLayoutCrossAxisAlignment = End;
}

style colony-info-sidebar {
    BackgroundColor = Black;   
    GridItemX = 0;
    GridItemY = 0;
    PaddingTop = 64px;
    PaddingBottom = 20px;
}

style title-buttons {
    FlexLayoutDirection = Horizontal;
}

style title-button {
    LayoutType = Stack;
    PreferredSize = 24px;
    Border = 2px;
    BorderRadius = 50%;
    MarginRight = 10px;
}

style left-leg {
    TransformRotation = 45;
}

style right-leg {
    TransformRotation = -45;
}

style minus-bar {
    MinHeight = 4px;
    TransformRotation = 0;
}

style horizontal {
    TransformRotation = 0;
}

style vertical {
    TransformRotation = 90;
}

style body {
    GridItemX = 1;
    GridItemY = 1;
    BackgroundColor = White;
    CornerBevelBottomRight = 20px;
    LayoutType = Grid;
    GridLayoutColTemplate = 1fr, 1mn;
    GridLayoutRowTemplate = 1mx;
}

style body-sidebar {
    PreferredWidth = 300px;
    PreferredHeight = 1pca;
    BackgroundColor = #F2F2F2;
}

style colony-info-body {
    Padding = 2em;
    PreferredWidth = 1pca;
    PreferredHeight = 1pca;
}

style colony-info-head-section {
    FlexLayoutDirection = Column;
    FlexItemGrow = 1;
}

style colony-info-header-text {
//    FlexItemGrow = 1;
    LayoutType = Grid;
//    PreferredWidth = 800px;
    GridLayoutColTemplate = 1fr 1fr;
    GridLayoutRowAutoSize = 1mx;
    Padding = 1em;
    TextFontSize = 1.1em;
    TextFontAsset = @theme.fontGothamNarrowMedium;
    GridLayoutRowGap = 8;
}

style colony-name {
    TextFontSize = 3em;
    GridItemX = 0;
    GridItemWidth = 2;
    GridItemY = 0;
    MarginBottom = 0.25em;
}

style quote-container {
    PreferredWidth = 1pca;
}

style quote {
    PreferredWidth = 1pca;
    BackgroundColor = #F2F2F2;
    Padding = 0.5em;
}