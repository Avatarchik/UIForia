
namespace UIForia.Style {

    // Note: Most of this class gets generated by the style generator
    
    public static partial class PropertyParsers {

        internal static readonly PropertyParseEntry[] s_parseEntries;
        internal static readonly IStylePropertyParser[] s_ParserTable;

        public static bool TryResolvePropertyId(string idName, out PropertyParseEntry entry) {
            int num1 = 0;
            int num2 = s_parseEntries.Length - 1;

            while (num1 <= num2) {
                int index1 = num1 + (num2 - num1 >> 1);

                int num3 = string.CompareOrdinal(s_parseEntries[index1].loweredName, idName);

                if (num3 == 0) {
                    entry = s_parseEntries[index1];
                    return true;
                }

                if (num3 < 0) {
                    num1 = index1 + 1;
                }
                else {
                    num2 = index1 - 1;
                }
            }

            entry = default;
            return false;
        }

        public struct PropertyParseEntry {

            public readonly string name;
            public readonly string loweredName;
            public readonly PropertyId propertyId;
            public readonly IStylePropertyParser parser;

            public PropertyParseEntry(string name, PropertyId propertyId, IStylePropertyParser parser) {
                this.name = name;
                this.propertyId = propertyId;
                this.parser = parser;
                this.loweredName = name.ToLower();
            }

        }

        public static bool TryResolvePropertyGroupId(string idName) {
            throw new System.NotImplementedException();
        }

    }

}