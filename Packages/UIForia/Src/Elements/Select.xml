<?xml version="1.0" encoding="utf-8"?>
<UITemplate>

    <Style>

        style select {
            LayoutType = Stack;
            AlignItemsVertical = Center Parent;
            BackgroundColor = white;
            PreferredSize = 1cnt 48px;
            TextFontSize = 32px;
            BorderRadius = 8px;
            Border = 2px;
            BorderColor = #B2B2B2;
            PaddingRight = 32px;
            PaddingLeft = 16px;
            [hover] {
                BorderColor = #00B5D9;
            }
            [attr:disabled] {
                Opacity = 0.4;
                [hover] {
                    BorderColor = #B2B2B2;
                }
            }
        }

        style select-option {
            TextColor = black;
            Padding = 4px 8px 4px 4px;
            DistributeExtraSpaceVertical = CenterContent;
            FlexLayoutDirection = Horizontal;
            BackgroundColor = clear;
            LayoutFitHorizontal = Grow;
            [hover] {
                MinWidth = 1cnt;
                TextColor = white;
                BackgroundColor = #006d82;
                ClipBehavior = Never;
            }
        }
        
        style select-label {
            PaddingLeft = 30px;
            LayoutFitHorizontal = Grow;
            [hover] {
                MinWidth = 1cnt;
            }
        }
        
        style selected-element-icon {
            PreferredSize = 18px;
            LayoutBehavior = Ignored;
            BackgroundTint = black;
            AlignY = 50% Parent;
            AlignX = 4px Parent;
            [hover] {
                BackgroundTint = white;
            }
        }

        style select-options {
            // attention: load bearing comma
            AlignY = -3px, Parent;
            AlignX = -10px, Parent;
            BackgroundColor = white;
            LayoutFitHorizontal = FillParent;
            BorderRadius = 4px;
            BorderColor = black;
            Border = 1px;
            MaxHeight = 400px;
            Padding = 8px 0;
            ZIndex = 20;
        }
        
        style transclude {
            LayoutBehavior = TranscludeChildren;
        }

        style select-chevron {
            PreferredSize = 2px 1px;
            BackgroundColor = white;
        }

        style select-chevron-holder {
            LayoutBehavior = Ignored;
            AlignmentTargetX = Parent;
            AlignX = 100%;
            BackgroundColor = #00b5d0;
            PreferredSize = 32px 1psz;
            BorderColor = #006d82;
            BorderRadius = 0 8px 8px 0;
            //Border = 2px;
            DistributeExtraSpaceVertical = CenterContent;
            DistributeExtraSpaceHorizontal = CenterContent;
            PaddingTop = 4px;
            PaddingBottom = 4px;

            [attr:disabled="select-disabled"] {
                BorderColor = #666;
                BackgroundColor = #999;
            }
        }

        style chevron-down {
            PreferredSize = 10px 6px;
            BackgroundImage = url("UIForia/icons/ui_selectbox_down_chevron@2x");
        }

        style chevron-up {
            MarginTop = 1px;
            PreferredSize = 10px 6px;
            BackgroundImage = url("UIForia/icons/ui_selectbox_up_chevron@2x");
        }

        style select-display {
            TextColor = black;
            MarginRight = 16px;
        }
        
        style select-placeholder {
            TextColor = #666;
        }
        
         style options-container {
            TextColor = #666;
        }

    </Style>

    <Using namespace="UIForia.Elements" />

    <Contents style="select">

        <Group if="selectedIndex >= 0" style="select-display">
            <Slot name="select-display" style="select-display">
                {options[selectedIndex].Label}
            </Slot>
        </Group>

        <Group if="selectedIndex &lt; 0" style="select-display">
            <Slot name="select-placeholder" style="select-placeholder">
                Select a value
            </Slot>
        </Group>

        <Group style="select-chevron-holder">
            <Div style="chevron-up"/>
            <Div style="chevron-down"/>
        </Group>

        <ScrollView onMouseClick="SelectElement($event)" style="select-options" x-id="option-list">
            <Children x-id="option-children" style="transclude" x-type="template">
                <Group style="select-option">
                    <Image src="selectedElementIcon" style="selected-element-icon" if="DisplaySelectedIcon($option__internal)" />
                    <Div style="select-label">{$option__internal.Label}</Div>
                </Group>
            </Children>
        </ScrollView>

    </Contents>

</UITemplate>