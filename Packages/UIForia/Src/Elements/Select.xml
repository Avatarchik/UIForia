<?xml version="1.0" encoding="utf-8"?>
<UITemplate>

    <Style>

        style select {
            PreferredWidth = 1pca;
            [attr:disabled] {
                Opacity = 0.4;
            }
        }
        
        style select-padding {
            Border = 1px 0 1px 1px;
            BorderColor = #b2b2b2;
            BorderRadius = 4px 0 4px 0;
            BackgroundColor = white;
            Padding = 6px 8px;
            Overflow = Hidden;
            [hover] {
                BorderColor = #00b5d9;
            }
            [attr:disabled] {
                [hover] {
                    BorderColor = #b2b2b2;
                }
            }
        }

        style select-option {
            PreferredWidth = 1pca;
            MaxWidth = 1pca;
            TextColor = black;
            Padding = 4px 8px 4px 22px;
            FlexLayoutCrossAxisAlignment = Center;
            FlexLayoutDirection = Column;
            [hover] {
                MinWidth = 1cnt;
                TextColor = white;
                BackgroundColor = #006d82;
                BorderRadius = 4px;
            }
        }
        
        style selected-element-icon {
            PreferredSize = 10px;
            BackgroundColor = black;
            LayoutBehavior = Ignored;
            AnchorTop = -5px;
            AnchorTarget = Parent;
            TransformPositionY = 0.5pcah;
            TransformPositionX = 5px;
            [hover] {
                BackgroundColor = white;
            }
        }

        style option-list {
            AnchorTarget = Parent;
            LayoutBehavior = ignored;
            AnchorLeft = -10px;
            AnchorBottom = 3px;
            TransformBehaviorX = AnchorMinOffset;
            TransformBehaviorY = AnchorMaxOffset;
            TransformPositionY = -1h;
            BackgroundColor = white;
            PreferredWidth = 1psz;
            BorderRadius = 4px;
            BorderColor = black;
            Border = 1px;
            ZIndex = 30;
            MaxHeight = 400px;
        }
        
        style transclude {
            LayoutBehavior = TranscludeChildren;
        }

        style select-chevron {
            PreferredSize = 2px 1px;
            BackgroundColor = white;
        }
        
        style chevron-container {
            BackgroundColor = #00b5d0;
            BorderColor = #006d82;
            BorderRadius = 0 4px 0 4px;
            Border = 1px;
            PreferredSize = 26px 1psz;
            FlexLayoutMainAxisAlignment = SpaceAround;
            FlexLayoutCrossAxisAlignment = Center;
            FlexLayoutDirection = Row;
    
            [attr:disabled="select-disabled"] {
                BorderColor = #666;
                BackgroundColor = #999;
            }
        }

        style content-area {
            LayoutType = Grid;
    
            PreferredWidth = 1pca;
            GridLayoutColTemplate = 1fr 1mx;
            GridLayoutRowTemplate = 1mx;
    
            GridLayoutRowAlignment = Fit;
            GridLayoutColAlignment = Fit;
    
            BorderRadius = 4px;
        }
        
        style select-display {
            TextColor = black;
        }
        
        style select-placeholder {
            TextColor = #666;
        }

    </Style>

    <Using namespace="UIForia.Elements" />

    <Contents style="select">

        <Group onMouseClick="BeginSelecting($event)" style="content-area">

            <Group if="selectedIndex >= 0" style="select-padding">
                <Slot name="select-display" style="select-display">
                    {options[selectedIndex].Label}
                </Slot>
            </Group>

            <Group if="selectedIndex &lt; 0" style="select-padding">
                <Slot name="select-placeholder" style="select-placeholder">
                    Select a value
                </Slot>
            </Group>

            <Slot name="chevron" style="transclude">
                <Div style="chevron-container">
                    <Arrow Rotation="ArrowRotation.Up" style="select-chevron" />
                    <Arrow Rotation="ArrowRotation.Down" style="select-chevron" />
                </Div>
            </Slot>
        </Group>

        <ScrollView onMouseClick="SelectElement($event)" if="selecting" style="option-list" x-id="option-list">
            <Children x-id="option-children" style="transclude" x-type="template">
                
                <Group style="select-option">
                    <Image src="selectedElementIcon" style="selected-element-icon" if="DisplaySelectedIcon($option__internal)" />
                    <Div>{$option__internal.Label}</Div>
                </Group>
            </Children>

        </ScrollView>

    </Contents>

</UITemplate>